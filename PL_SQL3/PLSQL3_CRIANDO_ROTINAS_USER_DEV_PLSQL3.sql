CREATE OR REPLACE FUNCTION RETORNA_CATEGORIA
(P_COD IN PRODUTO_EXERCICIO.COD%TYPE)
RETURN PRODUTO_EXERCICIO.CATEGORIA%TYPE
IS
   V_CATEGORIA PRODUTO_EXERCICIO.CATEGORIA%TYPE;
BEGIN
    SELECT CATEGORIA INTO V_CATEGORIA FROM PRODUTO_EXERCICIO WHERE COD = P_COD;
    RETURN V_CATEGORIA;
END;
/

CREATE OR REPLACE FUNCTION RETORNA_IMPOSTO 
(P_COD_PRODUTO PRODUTO_VENDA_EXERCICIO.COD_PRODUTO%TYPE)
RETURN PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE
IS
   V_CATEGORIA PRODUTO_EXERCICIO.CATEGORIA%TYPE;
   V_IMPOSTO PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
BEGIN
    V_CATEGORIA := RETORNA_CATEGORIA(P_COD_PRODUTO);
    IF TRIM(V_CATEGORIA) = 'Sucos de Frutas' THEN
        V_IMPOSTO := 10;
    ELSIF TRIM(V_CATEGORIA) = 'Águas' THEN
        V_IMPOSTO := 20;
    ELSIF TRIM(V_CATEGORIA) = 'Mate' THEN
        V_IMPOSTO := 15;
    END IF;
    RETURN V_IMPOSTO;
END;
/

CREATE OR REPLACE PROCEDURE CALCULA_IMPOSTO
(P_ID IN PRODUTO_VENDA_EXERCICIO.ID%TYPE, P_VALOR_IMPOSTO OUT FLOAT)
IS
   V_PRECO PRODUTO_VENDA_EXERCICIO.PRECO%TYPE;
   V_QUANTIDADE PRODUTO_VENDA_EXERCICIO.QUANTIDADE%TYPE;
   V_PERCENTUAL_IMPOSTO PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
BEGIN
   SELECT PRECO, QUANTIDADE, PERCENTUAL_IMPOSTO INTO V_PRECO, V_QUANTIDADE, V_PERCENTUAL_IMPOSTO
   FROM PRODUTO_VENDA_EXERCICIO WHERE ID = P_ID;
   P_VALOR_IMPOSTO := (V_PRECO * V_QUANTIDADE) * (V_PERCENTUAL_IMPOSTO/100);
END;
/

CREATE OR REPLACE PROCEDURE INCLUINDO_DADOS_VENDA 
(
P_ID PRODUTO_VENDA_EXERCICIO.ID%TYPE,
P_COD_PRODUTO PRODUTO_VENDA_EXERCICIO.COD_PRODUTO%TYPE,
P_DATA PRODUTO_VENDA_EXERCICIO.DATA%TYPE,
P_QUANTIDADE PRODUTO_VENDA_EXERCICIO.QUANTIDADE%TYPE,
P_PRECO PRODUTO_VENDA_EXERCICIO.PRECO%TYPE
)
IS
   V_VALOR PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE;
   V_PERCENTUAL PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
BEGIN
   V_PERCENTUAL := RETORNA_IMPOSTO(P_COD_PRODUTO);
   V_VALOR := P_QUANTIDADE * P_PRECO;
   INSERT INTO PRODUTO_VENDA_EXERCICIO 
   (ID, COD_PRODUTO, DATA, QUANTIDADE, PRECO, VALOR_TOTAL, PERCENTUAL_IMPOSTO) 
   VALUES 
   (P_ID, P_COD_PRODUTO, P_DATA, P_QUANTIDADE, P_PRECO, V_VALOR, V_PERCENTUAL);
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SOMA_VENDAS 
(P_VENDA_LIMITE IN PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE, P_ID_RETORNO OUT PRODUTO_VENDA_EXERCICIO.ID%TYPE)
IS
   V_ID PRODUTO_VENDA_EXERCICIO.ID%TYPE := 1;
   V_VALOR_TOTAL PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE;
   V_VENDA_TOTAL PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE := 0;
BEGIN
  LOOP
     SELECT VALOR_TOTAL INTO V_VALOR_TOTAL FROM PRODUTO_VENDA_EXERCICIO WHERE ID = V_ID;
     V_VENDA_TOTAL := V_VENDA_TOTAL + V_VALOR_TOTAL;
     IF V_VENDA_TOTAL >= P_VENDA_LIMITE THEN
        EXIT;
     END IF;
     V_ID := V_ID + 1;
  END LOOP;
  P_ID_RETORNO := V_ID;
END;
/

CREATE OR REPLACE PROCEDURE INCLUINDO_PRODUTO 
(P_COD PRODUTO_EXERCICIO.COD%TYPE
, P_DESCRICAO PRODUTO_EXERCICIO.DESCRICAO%TYPE
, P_CATEGORIA PRODUTO_EXERCICIO.CATEGORIA%TYPE)
IS
BEGIN
   INSERT INTO PRODUTO_EXERCICIO (COD, DESCRICAO, CATEGORIA) VALUES (P_COD, REPLACE(P_DESCRICAO,'-','>')
   , P_CATEGORIA);
   COMMIT;
END;
/