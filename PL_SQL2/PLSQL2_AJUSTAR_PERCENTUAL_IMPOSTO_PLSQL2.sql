/*
Execute os comandos abaixo antes de seguir com a atividade:
*/

INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (3, '41232',TO_DATE('01/02/2022','DD/MM/YYYY'), 250, 20, 0, 0);
INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (4, '32223',TO_DATE('03/02/2022','DD/MM/YYYY'), 200, 16, 0, 0);
INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (5, '92347',TO_DATE('05/02/2022','DD/MM/YYYY'), 200, 16, 0, 0);
INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (6, '41232',TO_DATE('02/03/2022','DD/MM/YYYY'), 210, 19, 0, 0);
INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (7, '33854',TO_DATE('05/03/2022','DD/MM/YYYY'), 180, 21, 0, 0);
INSERT INTO PRODUTO_VENDA_EXERCICIO
VALUES (8, '92347',TO_DATE('09/03/2022','DD/MM/YYYY'), 170, 20, 0, 0);


SELECT * FROM PRODUTO_VENDA_EXERCICIO;
SELECT * FROM PRODUTO_EXERCICIO; --41232 = SF, 32223 = SF, 67120= A, 92347 =MATE, 33854 = A;
/*
Observe o conteúdo da tabela PRODUTO_VENDA_EXERCICIO, 
após a inclusão dos dados acima

Note que o campo VALOR_TOTAL, que deveria ser a QUANTIDADE x PRECO, não está 
calculado corretamente, bem como o PERCENTUAL_IMPOSTO, que está vazio. 
Relembrando que o PERCENTUAL_IMPOSTO é obtido da função RETORNA_IMPOSTO.

Faça uma procedure que percorra, de forma sequencial, o valor do identificador 
da venda (ID) e atualize, na tabela PRODUTO_VENDA_EXERCICIO, as colunas 
VALOR_TOTAL e PERCENTUAL_IMPOSTO.
*/

CREATE OR REPLACE PROCEDURE ATUALIZA_VALOR_PERCENTUAL_IMPOSTO
    (
    P_IMPOSTO IN OUT PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE,
    P_VALOR_TOTAL IN OUT PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE
    --P_CONTADOR IN OUT INTEGER
    )
IS
    V_QUANTIDADE_TOTAL INTEGER;
    V_VALOR_TOTAL PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE;
    V_CONTADOR INTEGER := 0;
    V_COD_PRODUTO PRODUTO_VENDA_EXERCICIO.COD_PRODUTO%TYPE;
    
    
BEGIN
    --DA PRA TANSFORMAR EM FUNCAO--CONTA_TABELA PRODUTO_VENDA_EXERCICIO
    SELECT COUNT(*) INTO V_QUANTIDADE_TOTAL FROM PRODUTO_VENDA_EXERCICIO;  
    
    LOOP 
        --V_CONTADOR SERVIRA DE ID PARA OS SELECTS
        V_CONTADOR := V_CONTADOR +1;
        --DA PRA TANSFORMAR EM FUNCAO-- SELECIONA COD_PRODUTO DA TABELA PRODUTO_VENDA_EXERCICIO
        SELECT COD_PRODUTO, (PRECO * QUANTIDADE) INTO V_COD_PRODUTO, V_VALOR_TOTAL  FROM PRODUTO_VENDA_EXERCICIO
        WHERE ID = V_CONTADOR;
        
        --CHAMADA DAS PROCEDURES E FUNCOES, 
        P_VALOR_TOTAL:= V_VALOR_TOTAL;
        P_IMPOSTO := RETORNA_IMPOSTO(V_COD_PRODUTO);  
        --P_CONTADOR := V_COD_PRODUTO;
        --dbms_output.put_line(P_CONTADOR  || ' >> ' ||P_IMPOSTO || ' >> ' || P_VALOR_TOTAL);
        
        UPDATE PRODUTO_VENDA_EXERCICIO
        SET PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL = P_VALOR_TOTAL, PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO = P_IMPOSTO
        WHERE ID = V_CONTADOR;
    EXIT WHEN V_QUANTIDADE_TOTAL <= V_CONTADOR ;
    END LOOP;
COMMIT;
END;


------------------TESTE DO EXERCICIO----------------------------------
SET SERVEROUTPUT ON;
DECLARE
    --CONT INTEGER; 
    IMPOSTO PRODUTO_VENDA_EXERCICIO.ID%TYPE;
    VALOR_TOTAL PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
    
BEGIN
    ATUALIZA_VALOR_PERCENTUAL_IMPOSTO(IMPOSTO, VALOR_TOTAL);
END;

SELECT * FROM PRODUTO_VENDA_EXERCICIO;
------------------------------------------------------------------------

--SF - 10, MATE- 15, A - 20;
--41232 = SF, 32223 = SF, 92347 =MATE, 33854 = A, 67120= A;
VARIABLE G_VALOR VARCHAR2;
EXECUTE :G_VALOR := RETORNA_IMPOSTO('33854');
PRINT G_VALOR;